<%= task_view(@task, title: @title, tab: params[:tab]) %>

<% unless @task.destinations.blank? and @task.paths.blank? and @task.notes.blank? %>
  <h4 class="page-header">დავალების რუკა</h4>
  <p>
    <strong style="color: green;">მწვანე ფრად</strong> მონიშნულია დავალების
    <strong style="color: green;">გეგნიური მარშუტი</strong>;
    ხოლო <strong style="color: red;">წითლად</strong> -- რეალური <strong style="color: red;">ტრეკი</strong>.
  </p>
  <%= render partial: '/layouts/paths', locals: { paths: @task.tracking_paths, direction: true } %>
  <script type="text/javascript">
    var task_paths = [<%=
      @task.paths.blank? ? '' : @task.paths.map do |path|
        '['+ path.map { |point| "[#{point['lat']},#{point['lng']}]" }.join(',') +']'
      end.join(',')
    %> ];
    <% if @task.destinations.present? %>
      var destinations = eval('<%= @task.normal_destinations.map { |dest| {name: dest.name, type: dest.class.name, lat: dest.lat, lng: dest.lng} }.to_json.html_safe %>');
    <% else %>
      var destinations = [];
    <% end %>
    var notes = eval('<%= @task.notes.map{ |note| {text: note.text, detail: [note.detail.surface.type.name, note.detail.surface.name, note.detail.name], lat: note.lat, lng: note.lng, easting: note.easting, northing: note.northing, time: note.created_at.localtime.strftime('%d-%b-%Y %H:%M:%S')} }.to_json.html_safe %>');
    var onPostInitialize = function(map, bounds) {
      draw_paths({ map: map, data: task_paths, bounds: bounds, color: '#00AA00', direction: true, });
      drawDestinations(map, bounds);
      drawNotes(map, bounds);
      map.fitBounds(bounds);
    };
    var drawDestinations = function(map, bounds) {
      for (var i = 0, l = destinations.length; i < l; i++) {
        var dest = destinations[i];
        var position = new google.maps.LatLng(dest.lat, dest.lng);
        var icon = '';
        if (dest.type == 'Objects::Office') {
          icon = '/map/office.png';
        } else if (dest.type == 'Objects::Substation') {
          icon = '/map/substation.png';
        } else if (dest.type == 'Object::Tower') {
          icon = '/map/tower.png';
        }
        var marker = new google.maps.Marker({
          position: position,
          map: map,
          title: dest.name,
          icon: icon,
        });
        bounds.extend(position);
      }
    };
    var drawNotes = function(map, bounds) {
      var infowindow = new google.maps.InfoWindow({});
      for (var i = 0, l = notes.length; i < l; i++) {
        var note = notes[i];
        var position = new google.maps.LatLng(note.lat, note.lng);
        var icon = '/map/note.png';
        var content = '<h4>'+note.time+'</h4><hr/>'
            + '<p>' + note.detail.join(' &rarr; ') + '</p>'
            + '<p>' + note.text + '</p>'
            + '<p>E: <code>' + note.easting + '</code>; N: <code>' + note.northing + '</code></p>';
        var marker = new google.maps.Marker({
          position: position,
          map: map,
          icon: icon,
          title: note.text,
          html: content,
        });
        google.maps.event.addListener(marker, 'click', function(evt) {
          infowindow.setContent(this.html);
          infowindow.open(map, this);
        });
        bounds.extend(position);
      }
    };
  </script>

  <% if @task.tracking_paths.any? %>
    <div class="page-header">
      <div class="pull-right">
        <a href="<%= tasks_task_url(id:@task.id, format: 'kmz') %>" class="btn btn-default btn-sm">
          <i class="fa fa-download"></i>
          KMZ ფორმატში
        </a>
      </div>
      <h4>ინფორმაცია ტრეკების შესახებ</h4>
    </div>
    <%= render partial: '/tasks/tracking/tracks', locals: {tracks: @task.tracking_paths.desc(:_id)} %>
  <% end %>
<% end %>
